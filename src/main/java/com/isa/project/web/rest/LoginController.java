package com.isa.project.web.rest;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.isa.project.service.UserService;
import com.isa.project.web.dto.RegistrationUserDto;

@RestController // This means that this class is a Controller
@CrossOrigin
@RequestMapping(value = "/api/login") // This means URL's start with /login (after									// Application path)
public class LoginController {

	// This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	
	@Autowired
	private UserService userService;
	

	@RequestMapping(value = "/registrationMessage", method = RequestMethod.POST, consumes="application/json")
	public ResponseEntity<String> displayregistrationMessage(
			@RequestBody RegistrationUserDto registrationUserDto,
			HttpServletRequest request) {

		//TokenProvider tp = new TokenProvider();
		//String name = tp.getUsernameFromToken(token);
		//System.out.println(name + " pogodio registraciju");*/
		
		System.out.println(registrationUserDto  + " ovo je user dobijen DTO");
		
		
		if(userService.registerUser(registrationUserDto, request))
			return new ResponseEntity<String>("Activation link has been sent to your email address!",HttpStatus.OK);
		
		return new ResponseEntity<String>("Registration failed!",HttpStatus.BAD_REQUEST);
		
		
	}
	
	// Process confirmation link
	@RequestMapping(value="/confirm", method = RequestMethod.GET)
	public ResponseEntity<String> showConfirmationPage(@RequestParam("token") String token) {
			
		if(userService.confirmAccountRegistrationToken(token))
			return new ResponseEntity<String>("Account activated!",HttpStatus.OK);
		
		return new ResponseEntity<String>("Coudln`t find the token.",HttpStatus.NOT_FOUND);
			
		
	}
	

	
	@RequestMapping(value = "/sign-up", method = RequestMethod.POST, consumes="application/json")
    public void signUp(@RequestBody Object obj) {
    	
    	
   /* 	System.out.println("Pogodio + " + obj);

		User u = new User();

		u.setUsername("admin");
		u.setFirstName("ivan");
		u.setLastName("jancic");
		
		u.setPassword(new BCryptPasswordEncoder().encode("admin"));
        
		//applicationUserRepository.save(u);
		
		System.out.println("Uspesno");*/
    	
    	
        /*user.setPassword(bCryptPasswordEncoder.encode(user.getPassword()));
        applicationUserRepository.save(user);*/
    }
	


// janca@janca sifra 123

}
